[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "inspect_flow"
dynamic = ["version"]
description = "Inspect Flow is a workflow stack built on Inspect AI that enables research organizations to run AI evaluations at scale"
authors = [{ name = "Meridian Labs" }]
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT License" }
dependencies = [
    "click>=8.2.1",
    "inspect-ai>=0.3.131",
    "pydantic>=2.11.2",
    "python-dotenv>=1.1.1",
    "typing_extensions>=4.9.0",
]

[project.urls]
"Source Code" = "https://github.com/meridianlabs-ai/inspect_flow"
"Issue Tracker" = "https://github.com/meridianlabs-ai/inspect_flow/issues"

[project.scripts]
flow = "inspect_flow._cli.main:main"

[dependency-groups]
dev = [
    "ruff",
    "pytest",
    "anthropic",
    "openai",
    "pytest-asyncio",
    "pytest-dotenv",
    "pyright",
    "types-pyyaml>=6.0.12.20250915",
]


[tool.hatch.build]
only-packages = true
exclude = ["docs/", "tests/"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/inspect_flow/_version.py"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version" # Important for PyPI compatibility

[tool.uv]
managed = true
add-bounds = "lower"
default-groups = ["dev"]

[tool.ruff]
extend-exclude = ["docs"]
src = ["."]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # flake8
    "D",      # pydocstyle
    "I",      # isort
    "B",      # flake8-bugbear
    "SIM101", # duplicate isinstance
    # "RET", # flake8-return
    # "RUF", # ruff rules
]
ignore = ["E203", "E501", "D10", "D212", "D415"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
